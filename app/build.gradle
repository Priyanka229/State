plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
}

apply from: "../apptentive_versions.gradle"

allOpen {
    annotation('apptentive.com.states.utilities.OpenForTesting')
}

android {
    compileSdkVersion apptentiveCompileSdkVersion
    buildToolsVersion apptentiveBuildToolsVersion

    defaultConfig {
        applicationId "apptentive.com.states"
        minSdkVersion apptentiveMinSdkVersion
        targetSdkVersion apptentiveTargetSdkVersion
        versionCode apptentiveVersionCode
        versionName apptentiveVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding { enabled = true }
}

dependencies {
    /**
     * kotlin
     */
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$apptentiveKTXVersion"

    /** layout */
    implementation "androidx.appcompat:appcompat:$apptentiveAppCompatVersion"
    implementation "com.google.android.material:material:$apptentiveMaterialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$apptentiveConstraintlayoutVersion"

    /**
     * coroutine
     */
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$apptentiveCoroutineCoreVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$capptentiveCoroutineAndroidVersion"

    /**
     * view model
     */
    implementation "androidx.lifecycle:lifecycle-extensions:$apptentiveLifecycleExtensionsVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$apptentiveViewModelVersion"

    /**
     retrofit
     */
    api "com.squareup.retrofit2:retrofit:${apptentiveRetrofitVersion}"
    api "com.squareup.retrofit2:converter-gson:${apptentiveRetrofitVersion}"
    implementation "com.squareup.okhttp3:logging-interceptor:${apptentiveRetrofitIntercepterVersion}"

    /**
     * testing
     */
    testImplementation "junit:junit:$apptentiveJUnitVersion"
    testImplementation "androidx.arch.core:core-testing:$apptentiveCoreTestingVersion"
    testImplementation "org.mockito:mockito-core:$apptentiveMockitoVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$apptentiveCoroutineTestVersion"

    /** android testing */
    androidTestImplementation "androidx.test.ext:junit:$apptentiveAndroidJUnitVersion"
    androidTestImplementation "androidx.test:runner:$apptentiveAndroidJUnitVersion"
    androidTestImplementation "androidx.test:core:$apptentiveAndroidJUnitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$apptentiveExpressionVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$apptentiveExpressionVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$apptentiveExpressionVersion"
    debugImplementation "androidx.fragment:fragment-testing:$apptentiveDebugFragment_version"
}
